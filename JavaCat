import objectdraw.*;
import Java.awt.*;
import java.util.*;
import javafx.*;

public class JavaCat extends Application extends WindowController{

  private static int foodLevel = 75;
  private static int intimacy = 25;
  private static int intelligence = 0;
  private static int rebellion = 25;
  
  private static boolean awake = true;
  private static int patCount = 0;
  private Random generator = new Random();

  private static int count = 0;
  private static int time;
  private static int date;
  private static int month;
  
  private static final int TWO = 2;
  private static final int THREE = 3;
  private static final int FIVE = 5;
  private static final int TWENTY_FIVE = 25;
  private static final int TWENTY_EIGHT = 28;
  private static final int FIFTY = 50;
  private static final int SEVENTY_FIVE = 75;
  private static final int HUNDRED = 100;

  public void start(Stage primaryStage) {
    Pane parentPane = new Pane();   // contains background
    Pane childPane = new GridPane();
    childPane.setHgap(20);
    childPane.setVgap(20);
    childPane.setPadding(new Insets(40, 20, 40, 20));
    
    ImageView background = new ImageView("image/background");
  
    Image catNormal = new Image(“image/catNormal”);
    ImageView imageViewCatNormal = new ImageView(catNormal);
    
    Text txMonthAndDate = new Text(calculateMonth + calculateDate);
    Text txTime = new Text(calculateTime);
    
    parentPane.getChildren().addAll(background, childPane);

    Scene scene = new Scene(pane, 800, 1024);
    primaryStage.setTitle(“Java Cat”);
    primaryStage.setScene(scene);
    primaryStage.show();
    primaryStage.setResizable(false);
  }
  
  public static void main(String[] args) {
    launch(args);
    
    if (foodLevel == 0) {
      System.exit(1);
    }
    if (count == THREE * THREE * TWENTY_EIGHT - 1) {
      System.exit(1);
    }
  }
  
  public void onMouseClick(Location point) {
    if (feed.contains(point)) {
      increment(foodLevel);
      decrement(patCount);
      count++;
    }
    if (pat.contains(point)) {
      pat();
    }
    if (rebuke.contains(point)) {
      rebuke();
    }
  }

  public static void pat();
    if (patCount > FIVE) {
      decrement(intimacy);
    }
    else if (patCount > THREE) {
      patCount++;
    }
    else {
      patCount++;
      increment(intimacy);
    }
    foodLevel -= FIVE;
    count++;
  }

  public static void rebuke();
    if (rebellion > SEVENTY_FIVE) {
      decrement(intimacy);
      decrement(intimacy);
    }
    else {
      decrement(intimacy);
    }
    decrement(rebellion);
    foodLevel -= FIVE;
    count++;
  }

  public static String calculateTime();
    time = count % THREE;
    if (time == 0) {
      return “Morning”;
    }
    if (time == 1) {
      return “Afternoon”;
    }
    else {
      return “Evening”;
    }
  }

  public static String calculateDate();
    date = (count / THREE) % TWENTY_EIGHT + 1;
    return  date + “”;
  }

  public static String calculateMonth();
    month = (count / THREE) / TWENTY_EIGHT + 1;
    if (month == 1) {
      return “January ”;
    }
    if (month == TWO) {
      return “February ”;
    }
    else {
      return “March ”;
    }
  }

  public static int foodLevelPlus();
    if (foodLevel < FIFTY) {
      foodLevel += FIFTY;
      return foodLevel;
    }
    else {
      return HUNDRED;
    }
  }

  public static int increment(int variavle);
    if (variable < HUNDRED) {
      variable++;
      return variable;
    }
    else {
      return variable;
    }
  }

  public static int decrement(int variable);
    if (variable > 0) {
      variable--;
      return variable;
    }
    else {
      return variable;
    }
  }
}

import…
import objectdraw.*;
import Java.awt.*;

public class JavaCat extends Application extends WindowController{

  private static int foodLevel = 75;
  private static int intimacy = 25;
  private static int intelligence = 0;
  private static int rebellion = 25;

  private static int count = 0;
  private static int time;
  private static int date;
  private static int month;

  private static int patCount = 0;
  private static boolean awake = true;

  public void start(Stage primaryStage) {
    Pane pane = new GridPane();
  
    Image catNormal = newImage(“image/catNormal”);
    ImageView imageViewCatNormal = new ImageView(catNormal);
    pane.getChildren().addAll(feed, pat, rebuke, date??);

    Scene scene = new Scene(pane, 800, 1024);
    primaryStage.setTitle(“Java Cat”);
    primaryStage.setScene(scene);
    primaryStage.show();
    primaryStage.setResizable(false);
  }
  
  public static void main(String[] args) {
    launch(args);

    if (foodLevel == 0) {
      System.exit(1);
    }
    if (count == 3 * 3 * 28 - 1) {
      System.exit(1);
    }
  }
  
  public void onMouseClick(Location point) {
    if (feed.contains(point)) {
      foodLevelPlus();
      patCountMinus();
      count++;
    }
    if (pat.contains(point)) {
      pat();
    }
    if (rebuke.contains(point)) {
      rebuke();
    }
  }

  public static void pat();
    if (patCount > 5) {
      intimacyMinus();
    }
   if (patCount > 3) {
     patCount++;
   }
     else {
            patCount++;
            intimacyPlus();
        }
        foodLevel -= 5;
        count++;
}

    public static void rebuke();
        if (rebellion > 75) {
            intimacyMinus();
            intimacyMinus();
        }
   else {
            intimacyMinus();
        }
        rebellionMinus();
        foodLevel -= 5;
        count++;
    }

    public static String calculateTime();
        time = count % 3;
        if (time == 0) {
            return “Morning”;
        }
        if (time == 1) {
            return “Afternoon”;
        }
        else {
            return “Evening”;
        }
}

    public static String calculateDate();
        date = (count / 3) % 28 + 1;
        return  date + “”;
}

    public static String calculateMonth();
        month = (count / 3) / 28 + 1;
        if (month == 1) {
            return “January”;
        }
        if (month == 2) {
            return “February”;
        }
        else {
            return “March”;
        }
}

public static int foodLevelPlus();
    if (foodLevel < 50) {
        foodLevel += 50;
        return foodLevel;
    }
    else {
        return 100;
        }
    }

public static int intimacyPlus();
    if (intimacy < 100) {
        intimacy++;
        return intimacy;
    }
    else {
        return intimacy;
        }
    }

public static int intimacyMinus();
    if (intimacy > 0) {
        intimacy--;
        return intimacy;
    }
    else {
        return intimacy;
        }
}

public static int RebellionPlus();
    if (rebellion < 100) {
        intimacy++;
        return rebellion;
    }
    else {
        return rebellion;
        }
    }

public static int RebellionMinus();
    if (rebellion > 0) {
        intimacy--;
        return rebellion;
    }
    else {
        return rebellion;
        }
    }

public static int patCountMinus();
    if (patCount > 0) {
        patCount--;
        return patCount;
    }
    else {
        return patCount;
        }
    }

}
